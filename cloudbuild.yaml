steps:
  # Download audio mp3 file
  - name: gcr.io/cloud-builders/wget
    args: ['-O', '${_FILENAME}.mp3', '${_AUDIO_URL}']

  # Convert audio from mp3 to flac
  - name: linuxserver/ffmpeg
    args: ['-i', '${_FILENAME}.mp3', '-ac', '1', '${_FILENAME}.flac']

  # Copy the flac file to GCS bucket
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', '${_FILENAME}.flac', '${_GCS_FOLDER_PATH}/${_FILENAME}.flac']

  # Run speech-to-text API to transcribe the flac file from GCS bucket, save the operation ID to file
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - -c
      - gcloud ml speech recognize-long-running ${_GCS_FOLDER_PATH}/${_FILENAME}.flac --language-code=en-US --async --format="value(name)" > operation-id.txt

  # Wait for the speech-to-text API operation to finish
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - -c
      - gcloud ml speech operations wait `cat operation-id.txt`

  # Get the speech-to-text transcription result
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - -c
      - gcloud ml speech operations describe `cat operation-id.txt` > ${_FILENAME}.json

  # Use jq to get the transcription text into txt file
  - name: stedolan/jq
    entrypoint: /bin/bash
    args:
      - -c
      - jq <${_FILENAME}.json '.response.results[].alternatives[].transcript' -r > ${_FILENAME}.txt

  # Upload the transcription json and txt file to GCS bucket
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp', '${_FILENAME}.json', '${_FILENAME}.txt', '${_GCS_FOLDER_PATH}/']


substitutions:
  _AUDIO_URL: https://eps-dot-gcppodcast.appspot.com/dl/Google.Cloud.Platform.Podcast.Episode.1.mp3
  _GCS_FOLDER_PATH: gs://bucket-name/gcp-podcast
  _FILENAME: episode1
